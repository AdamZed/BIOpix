package movement;

import java.awt.*;
import java.io.*;
import java.util.logging.*;
import javafx.geometry.*;
import javafx.geometry.Insets;
import javafx.application.*;
import javafx.scene.*;
import javafx.scene.control.Button;
import javafx.scene.layout.*;

import javafx.stage.*;

/**
 * @version 1.0
 */

public class MainWindow extends Application {

	static int selected = -1;
	private Desktop desktop = Desktop.getDesktop();

	public void start(Stage stage) {
		stage.setTitle("BIOpix");

		Rectangle2D primaryScreenBounds = Screen.getPrimary().getVisualBounds();
		stage.setX(primaryScreenBounds.getMinX());
		stage.setY(primaryScreenBounds.getMinY());
		stage.setWidth(primaryScreenBounds.getWidth());
		stage.setHeight(primaryScreenBounds.getHeight());

		final FileChooser fileChooser = new FileChooser();
		final Button openButton = new Button("Open a Picture...");

		openButton.setOnAction(e -> {
			configureFileChooser(fileChooser);
			File file = fileChooser.showOpenDialog(stage);
			if (file != null) {
				openFile(file);
			}
		});

		final GridPane inputGridPane = new GridPane();

		GridPane.setConstraints(openButton, 0, 1);
		inputGridPane.setHgap(6);
		inputGridPane.setVgap(6);
		inputGridPane.getChildren().add(openButton);

		final Pane rootGroup = new VBox(12);
		rootGroup.getChildren().addAll(inputGridPane);
		rootGroup.setPadding(new Insets(12, 12, 12, 12));
		rootGroup.setStyle("-fx-background: #101010;");

		stage.setScene(new Scene(rootGroup));
		stage.show();
		stage.setOnCloseRequest(e -> {
			Platform.exit();
			System.exit(0);
		});
		buttons();
	}

	public void main(String[] args) {
		launch(args);
	}

	private void buttons() {
		Stage buttonStage = new Stage();

		buttonStage.setAlwaysOnTop(true);
		buttonStage.setTitle("Tools");
		buttonStage.setX(0);
		buttonStage.setY(Screen.getPrimary().getVisualBounds().getHeight() - 27);
		buttonStage.initStyle(StageStyle.UNDECORATED);

		FlowPane root = new FlowPane(Orientation.HORIZONTAL);
		root.setStyle("-fx-background: #343434;");
		root.setAlignment(Pos.TOP_LEFT);

		Button grid = new Button(); // 0
		Button draw = new Button(); // 1
		Button line = new Button(); // 2
		Button angle = new Button(); // 3

		// grid button ID 0
		grid.setGraphic(Images.grid);
		grid.setStyle(Images.style);
		grid.setOnMouseEntered(me -> {
			if (selected != 0)
				grid.setGraphic(Images.gridMO);
		});
		grid.setOnMouseExited(me -> {
			if (selected != 0)
				grid.setGraphic(Images.grid);
		});
		grid.setOnMouseClicked(me -> {
			grid.setGraphic(Images.gridSel);
			draw.setGraphic(Images.draw);
			line.setGraphic(Images.line);
			angle.setGraphic(Images.angle);
			selected = 0;
		});

		// draw button ID 1
		draw.setGraphic(Images.draw);
		draw.setStyle(Images.style);
		draw.setOnMouseEntered(me -> {
			if (selected != 1)
				draw.setGraphic(Images.drawMO);
		});
		draw.setOnMouseExited(me -> {
			if (selected != 1)
				draw.setGraphic(Images.draw);
		});
		draw.setOnMouseClicked(me -> {
			grid.setGraphic(Images.grid);
			draw.setGraphic(Images.drawSel);
			line.setGraphic(Images.line);
			angle.setGraphic(Images.angle);
			selected = 1;
		});

		// line button ID 2
		line.setGraphic(Images.line);
		line.setStyle(Images.style);
		line.setOnMouseEntered(me -> {
			if (selected != 2)
				line.setGraphic(Images.lineMO);
		});
		line.setOnMouseExited(me -> {
			if (selected != 2)
				line.setGraphic(Images.line);
		});
		line.setOnMouseClicked(me -> {
			grid.setGraphic(Images.grid);
			draw.setGraphic(Images.draw);
			line.setGraphic(Images.lineSel);
			angle.setGraphic(Images.angle);
			selected = 2;
		});

		// angle button ID 3
		angle.setGraphic(Images.angle);
		angle.setStyle(Images.style);
		angle.setOnMouseEntered(me -> {
			if (selected != 3)
				angle.setGraphic(Images.angleMO);
		});
		angle.setOnMouseExited(me -> {
			if (selected != 3)
				angle.setGraphic(Images.angle);
		});
		angle.setOnMouseClicked(me -> {
			grid.setGraphic(Images.grid);
			draw.setGraphic(Images.draw);
			line.setGraphic(Images.line);
			angle.setGraphic(Images.angleSel);
			selected = 3;
		});

		root.getChildren().addAll(grid, draw, line, angle);

		buttonStage.setScene(new Scene(root));
		buttonStage.show();
	}

	private static void configureFileChooser(final FileChooser fileChooser) {
		fileChooser.setTitle("View Pictures");
		fileChooser.setInitialDirectory(new File(System.getProperty("user.home")));
		fileChooser.getExtensionFilters().addAll(
				// new FileChooser.ExtensionFilter("All Images", "*.*"),
				new FileChooser.ExtensionFilter("JPG", "*.jpg"), new FileChooser.ExtensionFilter("PNG", "*.png"));
	}

	private void openFile(File file) {
		try {
			desktop.open(file);
		} catch (IOException ex) {
			Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
		}
	}
}
